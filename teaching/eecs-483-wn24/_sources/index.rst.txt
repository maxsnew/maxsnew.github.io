.. include:: course.links

EECS 483: Compiler Construction - Winter 2024
============================================================

.. toctree::
   :maxdepth: 1

   syllabus
   schedule
   toolchain
   submit
   codestyle
   hw2/doc/x86lite
   hw3/llvmlite

.. admonition:: Note

   **If you have recently registered for the course, please see the additional information on Piazza, and contact the course staff if you need help.**

		
Course Information
------------------
   
**Instructor**

* `Max New <https://www.maxsnew.com>`_

  office hours: Mondays 4-5pm, Thursday 10-11am, and by appointment, Beyster 4628

**GSI**

* **Eric Giovannini**

  office hours: Tuesdays 3-5pm, Beyster Atrium 

**IA**

* **Tingting Ding**

  office hours: Tuesdays 2-3pm, Beyster 1637 Beyster Table 2

**Coordinates**

* Time: Monday, Wednesday 1:30 - 3pm
* Lecture Location: |location|_
* Discussion Location: |discussion|_
* |piazza|_
* |gradescope|_
* |github|_
  

Homework Projects
-----------------

.. toctree::
   :maxdepth: 1

   hw1/doc/hw1-hellocaml

   hw2/doc/hw2-x86lite

   hw3/hw3-llvmlite

   hw4/hw4-oatv1

   hw5/hw5-oatv2

   hw6/hw6-opt

- HW1: Hellocaml!

  * Due: Tuesday, January 23rd at 11:59pm
  
- HW2: X86lite simulator

  * Due: Tuesday, February 6th at 11:59pm
  
- HW3: LLVMlite backend

  * Due: Tuesday, February 20th at 11:59pm
  
- HW4: Oat language compiler v.1

  * Due: Tuesday, March 26th at 11:59pm
  
- HW5: Oat language compiler v.2

  * Due: Tuesday, April 9th at 11:59pm

- HW6: Program Analysis & Optimizations

  * Due: Tuesday, April 23th at 11:59pm


    
Textbooks and Resources
-----------------------

There is no required textbook for this course.  However, you may find the following references useful for digging deeper into course topics.

**On Principles of Compiler Construction**

1. `Compilers: Principles, Techniques, and Tools (2nd Edition) <https://www.amazon.com/Compilers-Principles-Techniques-Tools-2nd/dp/0321486811>`_ by Aho, Lam, Sethi, and Ullman
2. `Advanced Compiler Design and Implementation
   <https://www.amazon.com/Advanced-Compiler-Design-Implementation-Muchnick/dp/1558603204/>`_ by Muchnick 
3. `Modern Compiler Implementation in ML <https://www.amazon.com/Modern-Compiler-Implement-Andrew-Appel/dp/0521607647>`_ by Appel

**On Types and Type Systems**

1. `Types and Programming Languages <https://www.cis.upenn.edu/~bcpierce/tapl/>`_ by Pierce
2. `Advanced Topics in Types and Programming Languages <https://www.cis.upenn.edu/~bcpierce/attapl/>`_ by Pierce et al.

**On Program Analysis**

1. `Principles of Program Analysis <https://www.springer.com/gp/book/9783540654100>`_ by Nielson, Nielson, and Hankin

**On OCaml**

1. `Introduction to Objective Caml <_static/files/ocaml-book.pdf>`_ by Jason Hickey 
2. `Real World OCaml <https://dev.realworldocaml.org/>`_ by Yaron Minsky, Anil Madhavapeddy, and Jason Hickey


   
..
   Copyright
   ---------

   Most of the materials and assignments for this module have been
   adapted, with permission, from the U.Penn's `CIS341
   <https://www.seas.upenn.edu/~cis341/current/>`_ by `Steve Zdancewic
   <https://www.cis.upenn.edu/~stevez/>`_.

..
   Indices and tables
   ==================

   * :ref:`genindex`
   * :ref:`search`
